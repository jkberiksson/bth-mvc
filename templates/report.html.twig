{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<div class="report">
    <h1>Report</h1>
    <div class="report-content">
        <div class="report-nav">
            <ul>
                <li><a href="#kmom01">Kmom01</a></li>
                <li><a href="#kmom02">Kmom02</a></li>
                <li><a href="#kmom03">Kmom03</a></li>
                <li><a href="#kmom04">Kmom04</a></li>
                <li><a href="#kmom05">Kmom05</a></li>
                <li><a href="#kmom06">Kmom06</a></li>
                <li><a href="#kmom0710">Kmom07/10</a></li>
            </ul>
        </div>
        <div class="report-answers">
            <div id="kmom01">
                <h3>Kmom01</h3>
                <h4>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</h4>
                <p>objektorienterad programmering är inget nytt ämne. I föregående läsperiod läste vi objektorienterad 
                python så själva tänket i sig är inget nytt. Jag har dock inte bestämt vad jag tycker om det. 
                Ibland gillar jag det, ibland inte. Jag står någonstans mittemellan.</p>
                <h4>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</h4>
                <p>Det första man behöver känna till är hur man skapar en klass och därifrån instansierar nya objekt av klassen. Attribut och metoder behöver man veta om också. 
                Dessutom dess synlighet. I php finns det tre typer av synligheter: public, private, protected.</p>
                <h4>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</h4>
                <p>Omfattande. Jag har kikat lite på en del olika ramverk tidigare och är införstådd med att det blir en hel del filer och mappar. Men Symfony är nog det ramverk 
                som jag stött på som innehåller flest filer än så länge. Utan att veta exakt vad varje fil gör så kan jag dock tänka mig att det är
                många filer som är "set and forget". Det är iallafall min känsla. Men det kan snabbt bli rörigt om man inte har bra struktur.</p>
                <h4>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</h4>
                <p>Nu har jag inte hunnit läsa igenom hela artikeln men om vi tar det i början så skulle jag vilja nämna namespace, composer och templating. Precis som det skrivs i artikeln, att man kan ha funktioner med samma namn så länge man har dom i olika namespace.
                Composer är också något jag tycker är bra. Stöter jag på något problem är sannolikheten ganska stor att någon annan stött på samma sak. Att då kunna installera paket som kan lösa problemet utan att jag behöver skriva koden(sålänge man förstår vad som händer) är positivt. 
                Och sen templating, som i vårt fall är twig. Underlättar något otroligt när man kan använda sina variabler direkt i sin HTML.</p>
                <h4>Vilken är din TIL för detta kmom?</h4>
                <p>TIL för detta kmom får bli Symfony. Nu har jag lärt mig långt ifrån allt. Men det är ändå kul att komma närmare verkligheten då jag förstått att många applikationer är skrivna i olika ramverk.</p>
            </div>
            <div id="kmom02">
                <h3>Kmom02</h3>
                <h4>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h4>
                <p>Arv är när en klass ärver egenskaper från en annan klass. Dvs, man kan komma åt och använda förälderns metoder och attribut. Komposition är när en klass inehåller instanser av en annan klass. Interface är en abstrakt typ som definierar egenskaper som en klass måste innehålla. Trait är ett sätt att återanvända kod i flera klasser utan att behöva använda sig av arv. Man skapar helt enkelt ett trait som innehåller metoder som flera klasser sen kan återanvända.</p>
                <h4>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h4>
                <p>Jag har löst uppgiften genom att skapa tre klasser. Card, DeckOfCards och DeckOfCardsWithJoker, där withJoker ärver från DeckOfCards. Implementationen av klasserna är jag nöjd med och tycker inte det var supersvårt. Dock känns det som det finns tusen olika sätt att implementera allt på vilket ibland ställer till det för mig. Då blir det lätt att jag övertänker hur jag ska göra. Sen är jag inte riktigt kompis med symfony än, även om det börjar sätta sig mer och mer. Jag upplever det som svårt att hålla reda på allt. Det är väldigt mycket filer hit och dit. Möjligt att jag kanske kan strukturera om det lite grann. Får kika på det tills nästa kmom.</p>
                <h4>Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</h4>
                <p>Än så länge har jag inte riktigt kommit in i det. "V":et är inga problem, där är jag med. Det jag har lite problem med är "C":et. Sen kan jag erkänna att jag har svårt för php överlag vilket inte underlättar. Jag tycker det är lite för krångligt men jag antar att det är en vanesak också. Men ett exempel är pil-nationen. Varför inte bara köra på "." som i tex JS.</p>
                <h4>Vilken är din TIL för detta kmom?</h4>
                <p>Lärt mig mer om hur klasser fungerar i PHP. Även lite nya symfony-delar.</p>
            </div>
            <div id="kmom03">
                <h3>Kmom03</h3>   
                <h4>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</h4>
                <p>Jag tror absolut att det underlättar för mig. Jag brukar inte planera mina arbeten i förväg utan brukar mest go with the flow. Då blir det lätt att man stöter på problem under resans gång som man hade kunnat slippa om man bara att haft en plan och en struktur kring hur man ska bygga sin app.</p>
                <h4>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden, dina klasser och applikationen som helhet?</h4>
                <p>Spelet i sig fungerar så som jag tänkt mig. Däremot ser jag nu i efterhand att jag hade kunnat strukturera min kod på ett lite annorlunda sätt. T.ex hade jag kunnat ha en klass var för spelare och dealer. Men utöver det så tycker jag att jag lyckats hålla mina controllers relativt små och jag har försökt samla så mycket kod som möjligt i klasserna.</p>
                <h4>Vilken är din känsla för att koda i ett ramverk som Symfony, så här långt in i kursen?</h4>
                <p>Att koda i ramverk är något jag har sett framemot. Jag har exempelvis testat på lite react tidigare vilket jag gillade. Tyvärr har jag dock svårt för symfony. Egentligen har det nog inte med symfony i sig att göra, utan mer php. Programmering handlar ju mycket om att ta sig över första tröskeln, vilket jag inte gjort med php, varför vet jag inte...</p>
                <h4>Vilken är din TIL för detta kmom?</h4>
                <p>Får bli lite hur man ska tänka innan man börjar. Den tiden man lägger ner innan på att planera sitt arbete har man ofta igen senare.</p>
            </div>
            <div id="kmom04">
                <h3>Kmom04</h3>
            </div>
            <div id="kmom05">
                <h3>Kmom05</h3>
            </div>
            <div id="kmom06">
                <h3>Kmom06</h3>
            </div>
            <div id="kmom0710">
                <h3>Kmom07/10</h3>
            </div>
        </div>
    </div>
</div>
{% endblock %}